import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters
import requests
import os

BOT_TOKEN = os.environ.get("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

def get_terabox_download_link(url):
    api_url = f"https://ironman.koyeb.app/ironman/dl/terabox?link={url}"
    try:
        response = requests.get(api_url)
        data = response.json()
        return data.get("dlink", "‚ö†Ô∏è Failed to get download link.")
    except:
        return "‚ö†Ô∏è Error contacting Ironman API."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã ‡¥π‡¥æ‡¥Ø‡µç! TeraBox link ‡¥Ö‡¥Ø‡¥ï‡µç‡¥ï‡µÇ, ‡¥û‡¥æ‡µª download link ‡¥§‡¥∞‡¥æ‡¥Ç.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text
    if "terabox" in url:
        await update.message.reply_text("üîÑ Link process ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ...")
        download_link = get_terabox_download_link(url)
        await update.message.reply_text(f"‚úÖ Download Link:\n{download_link}")
    else:
        await update.message.reply_text("‚ö†Ô∏è ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø TeraBox link ‡¥Ö‡¥Ø‡¥ï‡µç‡¥ï‡µÇ.")

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
